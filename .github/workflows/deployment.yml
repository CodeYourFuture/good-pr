---
name: "Deploy container to Kubernetes"

on:
  workflow_call:
    inputs:
      aws-region:
        required: true
        type: string
      ecr-repo:
        required: true
        type: string
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      gpg-key:
        required: true
      k8s-master-port:
        required: true
      k8s-security-group:
        required: true
      s3-uri:
        required: true
jobs:
  push:
    name: "Push container to repo in AWS ECR"
    runs-on: ubuntu-22.04
    environment:
      name: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - uses: actions/download-artifact@v3
        with:
          name: goodpr-image
          path: /tmp
      - run: docker load --input /tmp/goodpr-image.tar
      - uses: aws-actions/configure-aws-credentials@v4-node16
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}
      - uses: aws-actions/amazon-ecr-login@v2
        id: ecr-login
      - run: |
          docker tag cyf/goodpr $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        env:
          IMAGE_TAG: ${{ github.sha }}
          REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          REPOSITORY: ${{ inputs.ecr-repo }}
  deploy:
    name: "Update deployment with new container in Kubernetes"
    runs-on: ubuntu-22.04
    needs:
      - push
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v4-node16
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}
      - uses: aws-actions/amazon-ecr-login@v2
        id: ecr-login
      - name: Authorize runner IP
        uses: ./.github/actions/allow-ip
        with:
          group: ${{ secrets.k8s-security-group }}
          port: ${{ secrets.k8s-master-port }}
          region: ${{ inputs.aws-region }}
      - name: Get config and set KUBECONFIG
        uses: ./.github/actions/get-kubeconfig
        id: get-kubeconfig
        with:
          gpg-key: ${{ secrets.gpg-key }}
          s3-uri: ${{ secrets.s3-uri }}
      - name: Update deployment
        run: |
          kubectl \
            --namespace=staging \
            set image deployment/class-planner \
            class-planner=$REGISTRY/$REPOSITORY:$IMAGE_TAG
        env:
          KUBECONFIG: ${{ steps.get-kubeconfig.outputs.kubeconfig }}
          IMAGE_TAG: ${{ github.sha }}
          REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          REPOSITORY: ${{ inputs.ecr-repo }}
